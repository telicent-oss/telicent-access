name: Build and push telicent-access

on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md
  # Manually execute
  workflow_dispatch:

jobs:
  # job
  get_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get version from package.json
        id: semver
        uses: martinbeentjes/npm-get-version-action@main
    outputs:
      version: ${{ steps.semver.outputs.current-version }}

  # job
  integrated_tests:
    permissions:
      contents: read
      packages: read
    needs: get_version
    env:
      APP_NAME: access
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
          scope: 'telicent-oss'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}

      - name: Get node version
        id: node
        run: |
          echo "version=$(node -v)" >> $GITHUB_OUTPUT

      - name: Get node_modules cache
        uses: actions/cache@v3.0.2
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install frontend dependencies
        run: |
          cd frontend
          mkdir -p reports
          yarn install
          yarn test:ci
      # TODO: Re-enable uploading of test artifacts
      # WHEN: GH Admin completes: https://github.com/Telicent-io/telicent-access/issues/361
      # WHO: Anyone
      # HOW: Uncomment the following step, and check if it passes
      # - uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      #     publish_dir: ./frontend/reports

  # job
  publish_frontend_image_to_container_registries:
    needs:
      - integrated_tests
      - get_version
    uses: telicent-oss/shared-workflows/.github/workflows/docker-push-to-registries.yml@main
    with:
      APP_NAME: access
      DOCKERFILE: Dockerfile
      PATH: ./frontend
      VERSION: ${{ needs.get_version.outputs.version }}
    secrets: inherit

  # job
  publish_api_image_to_container_registries:
    needs:
      - integrated_tests
      - get_version
    uses: telicent-oss/shared-workflows/.github/workflows/docker-push-to-registries.yml@main
    with:
      APP_NAME: access-api
      DOCKERFILE: Dockerfile
      VERSION: ${{ needs.get_version.outputs.version }}
    secrets: inherit
